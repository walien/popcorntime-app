#!/usr/bin/env node

var fs = require('fs');
var verifyRequirements = require('./utils/verify-requirements');
var safeExec = require('./utils/child-process-wrapper.js').safeExec;
var path = require('path');

// Executes an array of commands one by one.
function executeCommands(commands, done, index) {
    index = (index == undefined ? 0 : index);
    if (index < commands.length) {
        var command = commands[index];
        if (command.message) {
            console.log(command.message);
        }

        var options = null;
        if (typeof command !== 'string') {
            options = command.options;
            command = command.command;
        }
        safeExec(command, options, executeCommands.bind(this, commands, done, index + 1));
    } else {
        done(null);
    }

}

function bootstrap() {
    var ppmInstallPath = path.resolve(__dirname, '..', 'ppm');
    if (!fs.existsSync(ppmInstallPath)) {
        fs.mkdirSync(ppmInstallPath);
    }

    if (!fs.existsSync(path.join(ppmInstallPath, 'node_modules'))) {
        fs.mkdirSync(path.join(ppmInstallPath, 'node_modules'));
    }


    var ppmPath = path.resolve(__dirname, '..', 'ppm', 'node_modules', 'popcorn-package-manager', 'bin', 'ppm')
    var ppmFlags = process.env.JANKY_SHA1 || process.argv.indexOf('--no-color') !== -1 ? ' --no-color' : '';

    var npmPath = 'npm';
    var initialNpmCommand = fs.existsSync(npmPath) ? npmPath : 'npm';
    var npmFlags = ' --userconfig=' + path.resolve('.npmrc') + ' ';

    var ppmInstallCommand = npmPath + npmFlags + 'install';
    var ppmInstallOptions = {
        cwd: ppmInstallPath
    };

    if (process.argv.indexOf('--no-quiet') === -1) {
        ppmInstallCommand += ' --quiet';
        ppmInstallOptions.ignoreStdout = true;
    }

    if (process.env.JANKY_SHA1 && process.platform === 'win32') {
        ppmInstallCommand += ' --arch=ia32';
    }


    var commands = [{
        command: ppmInstallCommand,
        message: 'Installing ppm...',
        options: ppmInstallOptions
    }];


    process.chdir(path.dirname(__dirname));
    executeCommands(commands, process.exit);
}

verifyRequirements(function(error, successMessage) {
    if (error) {
        console.log(error);
        process.exit(1);
    }

    console.log(successMessage);
    bootstrap();
});
